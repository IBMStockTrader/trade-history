# Kafka consumer configs
mp.messaging.incoming.stocktrader.connector=liberty-kafka
mp.messaging.incoming.stocktrader.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.stocktrader.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.stocktrader.group.id=trade-history
mp.messaging.incoming.stocktrader.client.id=trade-history-consumer
mp.messaging.incoming.stocktrader.auto.offset.reset=latest

# liberty-kafka connector property that stops messages collection if unacked.limit=max.poll.records
# https://openliberty.io/blog/2019/09/13/microprofile-reactive-messaging.html
mp.messaging.incoming.stocktrader.unacked.limit=1000

# Important for high throughput (i.e. Looper run with multiple threads)
mp.messaging.incoming.stocktrader.enable.auto.commit=true

# Config support by the smallrye-kafka connector but not by the liberty-kafka connector (not part of the Kafka API spec)
# mp.messaging.incoming.stocktrader.commit-strategy=throttled

# common Kafka configs
mp.messaging.connector.liberty-kafka.security.protocol=SASL_SSL
mp.messaging.connector.liberty-kafka.sasl.mechanism=PLAIN
mp.messaging.connector.liberty-kafka.ssl.protocol=TLSv1.2
mp.messaging.connector.liberty-kafka.ssl.enabled.protocols=TLSv1.2
mp.messaging.connector.liberty-kafka.ssl.endpoint.identification.algorithm=HTTPS

# workaround for https://github.com/OpenLiberty/open-liberty/issues/10575
mp.messaging.incoming.stocktrader.topic=default-value
mp.messaging.connector.liberty-kafka.bootstrap.servers=default-value
mp.messaging.connector.liberty-kafka.sasl.jaas.config=default-value

# JWT Propagation
org.eclipse.microprofile.rest.client.propagateHeaders=Authorization,Proxy-Authorization

# OTEL Info
otel.sdk.disabled=false
otel.exporter.otlp.endpoint=http://jaeger-collector.istio-system.svc.cluster.local:4317
